class Solution {
public:
    int lcs(string x, string y, int n, int m, vector<vector<int>>& dp){
        //lets now try memoized version
        //in normal recursion only 16/44 passed
        //in this memoized version only 42 out of 44 tc passed 
        //at last lets make table of bottom up approach
        //itne strong test cases nahi banane chaiye yrr :(
        
        //base case
        if(n==0 || m==0)
            return 0;
        
        if(dp[n][m]!=-1)
            return dp[n][m];
        
        //choice diagram
        if(x[n-1]==y[m-1]){
            return dp[n][m] = 1 + lcs(x,y,n-1,m-1,dp);
        } 
        else{
            return dp[n][m] =  max(lcs(x,y,n-1,m,dp),lcs(x,y,n,m-1,dp));
        }
    }
    int longestCommonSubsequence(string text1, string text2) {
        int n=text1.size();
        int m=text2.size();
        vector<vector<int>> dp(n+1,vector<int>(m+1,-1));
        return lcs(text1,text2,n,m,dp);
    }
};